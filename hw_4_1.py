import cProfile


def list_create(list_len):
    from random import randint
    num_list = [randint(1, 200) for _ in range(list_len)]
    return num_list


def idx_list_comp(num_list):
    idx_list = [idx for idx, num in enumerate(num_list) if num % 2 == 0]
    return idx_list


def idx_for(num_list):
    idx_list = []
    for idx, num in enumerate(num_list):
        if num % 2 == 0:
            idx_list.append(idx)
    return idx_list


def main():
    num_list = list_create(100000)
    idx_list = idx_list_comp(num_list)
    idx_list = idx_for(num_list)


cProfile.run('main()')
'''
Выбрал задачу 2 из практической работы к 3 уроку. Так как уже было два способа решения.
Большая часть времени, в выполнении программы, уходит на создание списка случайных чисел.

При заданной длине списка в 100000, на создание списка случайных чисел уходит 0.238с, на создание списка, с индексами 
четных чисел, через конструктор списков 0.007с, через цикл for 0.017.

При заданной длине списка в 200000, на создание списка случайных чисел уходит 0.478с, на создание списка, с индексами 
четных чисел, через конструктор списков 0.015с, через цикл for 0.035.

При заданной длине списка в 2000000, на создание списка случайных чисел уходит 4.540с, на создание списка, с индексами 
четных чисел, через конструктор списков 0.161с, через цикл for 0.359.

При заданной длине списка в 20000000, на создание списка случайных чисел уходит 45.426с, на создание списка, с индексами 
четных чисел, через конструктор списков 1.587с, через цикл for 3.604.

Наблюдается абсолютно линейная зависимость времени выполнения от объема данных. Получается сложность О(n).
Так же хорошо заметно преимущество в скорости у конструктора списка, перед циклом for.
'''
